/* @oracle/oraclejet-preact: 15.1.5 */
import { I as ITEM_STYLE_CLASS } from './List-ce301f8f.js';
export { L as List } from './List-ce301f8f.js';
import { jsx, jsxs } from 'preact/jsx-runtime';
import { useState } from 'preact/hooks';
import './utils/UNSAFE_classNames.js';
import { containsKey } from './utils/UNSAFE_keys.js';
import { useId } from './hooks/UNSAFE_useId.js';
import { useViewportIntersect } from './hooks/UNSAFE_useViewportIntersect.js';
import { TabbableModeContext } from './hooks/UNSAFE_useTabbableMode.js';
import { useComponentTheme } from './hooks/UNSAFE_useComponentTheme.js';
import { useInteractionStyle } from './hooks/UNSAFE_useInteractionStyle.js';
import { mergeInterpolations } from './utils/UNSAFE_mergeInterpolations.js';
import './utils/UNSAFE_interpolations/flexitem.js';
import { listGroupHeaderMultiVariantStyles } from './PRIVATE_List/themes/ListStyles.css.js';
import { GroupedListRedwoodTheme } from './UNSAFE_GroupedList/themes/redwood/GroupedListTheme.js';
import { c as classNames } from './classNames-6df97f98.js';
import { f as flexitemInterpolations } from './flexitem-cf0b1a33.js';
import { S as SkeletonContainer } from './SkeletonContainer-ff118096.js';
export { S as SkeletonContainer } from './SkeletonContainer-ff118096.js';
import './UNSAFE_Flex.js';
import './UNSAFE_Skeleton.js';
import { F as Flex } from './Flex-1ec75561.js';
import { S as Skeleton } from './Skeleton-f735e119.js';
import './utils/UNSAFE_mergeProps.js';
import './PRIVATE_LoadMoreCollection.js';
import './LoadMoreCollection-0ebb60c1.js';
import 'preact';
import './PRIVATE_Collection.js';
import './Collection-b858cf89.js';
import './PRIVATE_VirtualizedCollection.js';
import './VirtualizedCollection-eeefac32.js';
import './utils/UNSAFE_arrayUtils.js';
import 'preact/compat';
import './UNSAFE_FocusTrap.js';
import './FocusTrap-46648548.js';

import './utils/PRIVATE_tabbableUtils.js';
import './_curry1-4637aee9.js';
import './_curry2-da491c7e.js';
import './_arity-249f1f1f.js';
import './_curry3-7db59ba0.js';
import './hooks/PRIVATE_useSelection.js';
import './hooks/UNSAFE_useUser.js';
import './index-ce660c32.js';
import './Common.js';
import './Common/themes.js';
import './Common/themes/redwood/theme.js';
import './Common/themes/themeContract.css.js';
import './utils/PRIVATE_collectionUtils.js';
import './utils/PRIVATE_clientHints.js';
import './clientHints-6ff785cb.js';
import './hooks/PRIVATE_useCurrentKey.js';
import './hooks/PRIVATE_useCollectionFocusRing.js';
import './hooks/PRIVATE_useTabbableModeSet.js';
import './hooks/PRIVATE_useItemAction.js';
import './UNSAFE_Selector.js';
import './PRIVATE_ThemedIcons/CheckboxOffIcon.js';
import './PRIVATE_Icons/CheckboxOff.js';
import './UNSAFE_Icon.js';
import './Icon-44f1fb0b.js';
import './utils/UNSAFE_size.js';
import './UNSAFE_Theme.js';
import './utils-79fd9e1a.js';
import './hooks/UNSAFE_useTooltip.js';
import './UNSAFE_Floating.js';
import './Floating-44024b63.js';
import './index-a9b88c2d.js';
import './utils/PRIVATE_floatingUtils.js';
import './utils/PRIVATE_refUtils.js';
import './hooks/UNSAFE_useOutsideClick.js';
import './UNSAFE_Floating/themes/redwood/FloatingTheme.js';
import './UNSAFE_Floating/themes/FloatingStyles.css.js';
import './FloatingStyles.styles.css';
import './UNSAFE_Floating/themes/redwood/FloatingBaseTheme.css.js';
import './UNSAFE_Floating/themes/redwood/FloatingBaseTheme.styles.css';
import './UNSAFE_Floating/themes/redwood/FloatingVariants.css.js';
import './vanilla-extract-recipes-createRuntimeFn.esm-ea2e9956.js';
import './vanilla-extract-dynamic.esm-22241307.js';
import './UNSAFE_Floating/themes/FloatingContract.css.js';
import './utils/UNSAFE_logger.js';
import './UNSAFE_Layer.js';
import './useThemeInterpolations-18331a05.js';
import './hooks/UNSAFE_useColorScheme.js';
import './hooks/UNSAFE_useScale.js';
import './utils/UNSAFE_interpolations/theme.js';
import './_has-92b39746.js';
import './hooks/UNSAFE_useHover.js';
import './hooks/UNSAFE_useToggle.js';
import './hooks/UNSAFE_useFocus.js';
import './hooks/UNSAFE_useTouch.js';
import './hooks/UNSAFE_useAnimation.js';
import './useAnimation-6ccd68bf.js';
import './hooks/UNSAFE_useThemeInterpolations.js';
import './hooks/UNSAFE_useTooltip/themes/redwood/TooltipContentTheme.js';
import './hooks/UNSAFE_useTooltip/themes/TooltipContentStyles.css.js';
import './TooltipContentStyles.styles.css';
import './hooks/UNSAFE_useTooltip/themes/redwood/TooltipContentBaseTheme.css.js';
import './hooks/UNSAFE_useTooltip/themes/redwood/TooltipContentBaseTheme.styles.css';
import './hooks/UNSAFE_useTooltip/themes/redwood/TooltipContentVariants.css.js';
import './TooltipContentVariants.styles2.css';
import './UNSAFE_Icon/themes/IconStyle.css.js';
import './IconStyle.styles.css';
import './PRIVATE_ThemedIcons/CheckboxOnIcon.js';
import './PRIVATE_Icons/CheckboxOn.js';
import './PRIVATE_ThemedIcons/CheckboxMixedIcon.js';
import './PRIVATE_Icons/CheckboxMixed.js';
import './UNSAFE_Selector/themes/SelectorStyles.css.js';
import './SelectorStyles.styles.css';
import './UNSAFE_Radio/themes/redwood/RadioIconTheme.js';
import './UNSAFE_Radio/themes/RadioIconStyles.css.js';
import './RadioIconStyles.styles.css';
import './UNSAFE_Radio/themes/redwood/RadioIconBaseTheme.css.js';
import './UNSAFE_Radio/themes/redwood/RadioIconBaseTheme.styles.css';
import './UNSAFE_Radio/themes/redwood/RadioIconVariants.css.js';
import './RadioIconVariants.styles2.css';
import './hooks/PRIVATE_useCollectionGestureContext.js';
import './hooks/UNSAFE_useActive.js';
import './keys-6a8847c4.js';
import './ListStyles.styles.css';
import './UNSAFE_GroupedList/themes/GroupedListStyles.css.js';
import './GroupedListStyles.styles.css';
import './UNSAFE_GroupedList/themes/redwood/GroupedListBaseTheme.css.js';
import './UNSAFE_GroupedList/themes/redwood/GroupedListBaseTheme.styles.css';
import './utils/UNSAFE_interpolations/dimensions.js';
import './utils/UNSAFE_interpolations/boxalignment.js';
import './utils/UNSAFE_interpolations/flexbox.js';
import './flexbox-94918d4c.js';
import './utils/UNSAFE_interpolations/borders.js';
import './UNSAFE_Skeleton/themes/redwood/SkeletonTheme.js';
import './UNSAFE_Skeleton/themes/SkeletonStyles.css.js';
import './SkeletonStyles.styles.css';
import './UNSAFE_Skeleton/themes/redwood/SkeletonBaseTheme.css.js';
import './UNSAFE_Skeleton/themes/redwood/SkeletonBaseTheme.styles.css';
import './UNSAFE_Skeleton/themes/redwood/SkeletonVariants.css.js';

// default style class for items in ListView
const GROUP_STYLE_CLASS = 'oj-c-listview-group';
const GROUP_SELECTOR = '.' + GROUP_STYLE_CLASS;
const STICKY_STYLE_CLASS = 'oj-c-listview-sticky';
/**
 * The internal component used to render a group header in ExpandableList and GroupedList.
 */
function ListGroupHeader({ ariaDescribedBy, children, itemKey, itemIndex, itemDepth, isFocused, isFocusRingVisible, isActive, isGridlineVisible, isExpandable, expandedKeys, viewportConfig }) {
    const [isStuck, setStuck] = useState(false);
    const { classes: groupedListThemeClasses, styles: groupedListStyles } = useComponentTheme(GroupedListRedwoodTheme);
    const { interactionProps, applyHoverStyle, applyPseudoHoverStyle, applyActiveStyle } = useInteractionStyle();
    const variantClasses = listGroupHeaderMultiVariantStyles({
        expandable: isExpandable ? 'isExpandable' : 'notExpandable',
        needsEventsHover: applyHoverStyle ? 'isNeedsEventsHover' : 'notNeedsEventsHover',
        pseudoHover: applyPseudoHoverStyle ? 'isPseudoHover' : 'notPseudoHover',
        active: applyActiveStyle || isActive ? 'isActive' : 'notActive',
        focusRingVisible: isFocusRingVisible && isFocused ? 'isFocusRingVisible' : 'notFocusRingVisible',
        gridlineTop: itemIndex > 0 ? 'visible' : 'hidden',
        gridlineBottom: isGridlineVisible ? 'visible' : 'hidden'
    });
    const baseClasses = [ITEM_STYLE_CLASS, GROUP_STYLE_CLASS, variantClasses];
    if (isStuck) {
        baseClasses.push(groupedListThemeClasses);
        baseClasses.push(groupedListStyles.stuckHeader);
        baseClasses.push(STICKY_STYLE_CLASS);
    }
    const classes = classNames(baseClasses);
    const styleInterpolations = mergeInterpolations([
        ...Object.values(flexitemInterpolations)
    ]);
    const { class: cls, ...cellStyles } = styleInterpolations({
        alignSelf: 'center',
        flex: '1 0 auto'
    });
    useViewportIntersect({
        scroller: () => {
            if (isExpandable) {
                return null;
            }
            if (viewportConfig == null) {
                return document.body;
            }
            return viewportConfig.scroller();
        }
    }, 0, 1, '[data-oj-key=' + itemKey + ']', () => {
        setStuck(false);
    }, (entry) => {
        if (entry.boundingClientRect.y !== entry.intersectionRect.y) {
            setStuck(true);
        }
    });
    return (jsx("div", { id: useId(), role: "row", "aria-rowindex": itemIndex + 1, "aria-level": isNaN(itemDepth) ? undefined : itemDepth + 1, "data-oj-key": itemKey, class: classes, ...(typeof itemKey === 'number' && { 'data-oj-key-type': 'number' }), ...interactionProps, children: jsx("div", { id: useId(), role: "gridcell", "aria-describedby": ariaDescribedBy, "aria-colindex": 1, "aria-expanded": containsKey(expandedKeys, itemKey), style: cellStyles, children: jsx(TabbableModeContext.Provider, { value: { isTabbable: false }, children: children }) }) }));
}

/**
 * Helper function to only include keys of leaf items.
 */
const excludeGroup = (data, keys) => {
    if (!keys.all) {
        const groups = data.data
            .filter((dataMetadata) => {
            return !dataMetadata.metadata.isLeaf;
        })
            .map((dataMetadata) => {
            return dataMetadata.metadata.key;
        });
        const leafOnly = Array.from(keys.keys.values()).filter((key) => {
            return !groups.includes(key);
        });
        return { ...keys, keys: new Set(leafOnly) };
    }
    return keys;
};

const GroupLoadingIndicator = () => (jsx(SkeletonContainer, { minimumCount: 3, children: (index) => {
        const padding = { paddingLeft: index * 10 + 'px' };
        return (jsxs(Flex, { height: "12x", align: "center", children: [jsx("span", { style: padding }), jsx(Skeleton, { height: "4x" })] }));
    } }));

/**
 * @license
 * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */

export { GROUP_SELECTOR, GroupLoadingIndicator, ListGroupHeader, STICKY_STYLE_CLASS, excludeGroup };
//# sourceMappingURL=PRIVATE_List.js.map
